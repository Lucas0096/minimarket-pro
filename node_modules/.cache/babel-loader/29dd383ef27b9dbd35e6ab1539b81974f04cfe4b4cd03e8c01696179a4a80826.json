{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\OneDrive\\\\Documentos\\\\Minimarket PRO\\\\Version 1.0\\\\src\\\\components\\\\PdfInvoiceReader.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PdfInvoiceReader = ({\n  onDataExtracted\n}) => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const fileInputRef = useRef(null);\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile && selectedFile.type === 'application/pdf') {\n      setFile(selectedFile);\n      setError('');\n    } else {\n      setFile(null);\n      setError('Por favor, selecciona un archivo PDF válido.');\n    }\n  };\n  const extractTextFromPdf = async pdfFile => {\n    setLoading(true);\n    setError('');\n    return new Promise(resolve => {\n      setTimeout(() => {\n        // Datos simulados basados en la imagen de tu factura\n        const simulatedData = [{\n          id: 1,\n          quantity: 1,\n          description: \"JAMON COCIDO\",\n          unitPrice: 1000,\n          subtotal: 1000\n        }, {\n          id: 2,\n          quantity: 1,\n          description: \"QUESO CREMOSO\",\n          unitPrice: 1500,\n          subtotal: 1500\n        }, {\n          id: 3,\n          quantity: 1,\n          description: \"SALAME MILAN\",\n          unitPrice: 2000,\n          subtotal: 2000\n        }, {\n          id: 4,\n          quantity: 1,\n          description: \"PAN DE CAMPO\",\n          unitPrice: 500,\n          subtotal: 500\n        }, {\n          id: 5,\n          quantity: 1,\n          description: \"ACEITUNAS\",\n          unitPrice: 300,\n          subtotal: 300\n        }, {\n          id: 6,\n          quantity: 1,\n          description: \"GASEOSA COCA-COLA\",\n          unitPrice: 250,\n          subtotal: 250\n        }, {\n          id: 7,\n          quantity: 1,\n          description: \"CERVEZA QUILMES\",\n          unitPrice: 350,\n          subtotal: 350\n        }, {\n          id: 8,\n          quantity: 1,\n          description: \"PAPAS FRITAS LAYS\",\n          unitPrice: 180,\n          subtotal: 180\n        }, {\n          id: 9,\n          quantity: 1,\n          description: \"CHOCOLATE AGUIL\",\n          unitPrice: 220,\n          subtotal: 220\n        }, {\n          id: 10,\n          quantity: 1,\n          description: \"GALLETITAS OREO\",\n          unitPrice: 120,\n          subtotal: 120\n        }];\n        const validatedData = simulatedData.map(item => {\n          const calculatedSubtotal = item.quantity * item.unitPrice;\n          const isConsistent = Math.abs(calculatedSubtotal - item.subtotal) < 0.01;\n          return {\n            ...item,\n            isConsistent\n          };\n        });\n        setLoading(false);\n        resolve(validatedData);\n      }, 2000);\n    });\n  };\n  const handleProcessPdf = async () => {\n    if (!file) {\n      setError('Por favor, selecciona un archivo PDF.');\n      return;\n    }\n    try {\n      const extractedData = await extractTextFromPdf(file);\n      onDataExtracted(extractedData);\n    } catch (err) {\n      setError('Error al procesar el PDF. Asegúrate de que sea una factura legible.');\n      console.error('PDF processing error:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-6 rounded-lg shadow-md dark:bg-gray-800\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-semibold text-gray-800 dark:text-white mb-4\",\n      children: \"Cargar Factura PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".pdf\",\n        onChange: handleFileChange,\n        ref: fileInputRef,\n        className: \"w-full text-sm text-gray-500 dark:text-gray-300 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), file && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600 dark:text-gray-400 mt-2\",\n        children: [\"Archivo seleccionado: \", file.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 18\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-sm mt-2\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleProcessPdf,\n      disabled: !file || loading,\n      className: \"w-full bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed\",\n      children: loading ? 'Procesando...' : 'Procesar PDF'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-sm text-gray-500 dark:text-gray-400 mt-4\",\n      children: \"Nota: Esta es una simulaci\\xF3n. La integraci\\xF3n real con OCR y PDF parsing requiere librer\\xEDas adicionales y puede ser compleja.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(PdfInvoiceReader, \"A+LTaLHF3NxxnpF4F1/OQHqiaOA=\");\n_c = PdfInvoiceReader;\nexport default PdfInvoiceReader;\nvar _c;\n$RefreshReg$(_c, \"PdfInvoiceReader\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","PdfInvoiceReader","onDataExtracted","_s","file","setFile","loading","setLoading","error","setError","fileInputRef","handleFileChange","e","selectedFile","target","files","type","extractTextFromPdf","pdfFile","Promise","resolve","setTimeout","simulatedData","id","quantity","description","unitPrice","subtotal","validatedData","map","item","calculatedSubtotal","isConsistent","Math","abs","handleProcessPdf","extractedData","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","ref","name","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/lucas/OneDrive/Documentos/Minimarket PRO/Version 1.0/src/components/PdfInvoiceReader.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\n\nconst PdfInvoiceReader = ({ onDataExtracted }) => {\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const fileInputRef = useRef(null);\n\n  const handleFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile && selectedFile.type === 'application/pdf') {\n      setFile(selectedFile);\n      setError('');\n    } else {\n      setFile(null);\n      setError('Por favor, selecciona un archivo PDF válido.');\n    }\n  };\n\n  const extractTextFromPdf = async (pdfFile) => {\n    setLoading(true);\n    setError('');\n\n    return new Promise(resolve => {\n      setTimeout(() => {\n        // Datos simulados basados en la imagen de tu factura\n        const simulatedData = [\n          { id: 1, quantity: 1, description: \"JAMON COCIDO\", unitPrice: 1000, subtotal: 1000 },\n          { id: 2, quantity: 1, description: \"QUESO CREMOSO\", unitPrice: 1500, subtotal: 1500 },\n          { id: 3, quantity: 1, description: \"SALAME MILAN\", unitPrice: 2000, subtotal: 2000 },\n          { id: 4, quantity: 1, description: \"PAN DE CAMPO\", unitPrice: 500, subtotal: 500 },\n          { id: 5, quantity: 1, description: \"ACEITUNAS\", unitPrice: 300, subtotal: 300 },\n          { id: 6, quantity: 1, description: \"GASEOSA COCA-COLA\", unitPrice: 250, subtotal: 250 },\n          { id: 7, quantity: 1, description: \"CERVEZA QUILMES\", unitPrice: 350, subtotal: 350 },\n          { id: 8, quantity: 1, description: \"PAPAS FRITAS LAYS\", unitPrice: 180, subtotal: 180 },\n          { id: 9, quantity: 1, description: \"CHOCOLATE AGUIL\", unitPrice: 220, subtotal: 220 },\n          { id: 10, quantity: 1, description: \"GALLETITAS OREO\", unitPrice: 120, subtotal: 120 }\n        ];\n\n        const validatedData = simulatedData.map(item => {\n          const calculatedSubtotal = item.quantity * item.unitPrice;\n          const isConsistent = Math.abs(calculatedSubtotal - item.subtotal) < 0.01;\n          return { ...item, isConsistent };\n        });\n\n        setLoading(false);\n        resolve(validatedData);\n      }, 2000);\n    });\n  };\n\n  const handleProcessPdf = async () => {\n    if (!file) {\n      setError('Por favor, selecciona un archivo PDF.');\n      return;\n    }\n\n    try {\n      const extractedData = await extractTextFromPdf(file);\n      onDataExtracted(extractedData);\n    } catch (err) {\n      setError('Error al procesar el PDF. Asegúrate de que sea una factura legible.');\n      console.error('PDF processing error:', err);\n    }\n  };\n\n  return (\n    <div className=\"bg-white p-6 rounded-lg shadow-md dark:bg-gray-800\">\n      <h3 className=\"text-lg font-semibold text-gray-800 dark:text-white mb-4\">Cargar Factura PDF</h3>\n      <div className=\"mb-4\">\n        <input\n          type=\"file\"\n          accept=\".pdf\"\n          onChange={handleFileChange}\n          ref={fileInputRef}\n          className=\"w-full text-sm text-gray-500 dark:text-gray-300 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100\"\n        />\n        {file && <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-2\">Archivo seleccionado: {file.name}</p>}\n        {error && <p className=\"text-red-500 text-sm mt-2\">{error}</p>}\n      </div>\n      <button\n        onClick={handleProcessPdf}\n        disabled={!file || loading}\n        className=\"w-full bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n      >\n        {loading ? 'Procesando...' : 'Procesar PDF'}\n      </button>\n      <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-4\">\n        Nota: Esta es una simulación. La integración real con OCR y PDF parsing\n        requiere librerías adicionales y puede ser compleja.\n      </p>\n    </div>\n  );\n};\n\nexport default PdfInvoiceReader;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}