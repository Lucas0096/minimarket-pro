{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\OneDrive\\\\Documentos\\\\Minimarket PRO\\\\Version 1.0\\\\src\\\\components\\\\BackupRestoreDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { getAllData, clearStore, putData, addData, STORES } from '../utils/indexedDb';\nimport { getCurrentUser } from '../utils/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BackupRestoreDashboard = () => {\n  _s();\n  const [message, setMessage] = useState({\n    type: '',\n    text: ''\n  });\n  const currentUser = getCurrentUser();\n  const handleExportData = async () => {\n    try {\n      const backupData = {};\n      for (const storeName of STORES) {\n        if (!currentUser || currentUser.role !== 'admin') {\n          if (storeName.startsWith('cashMovements_') || storeName.startsWith('cashRegisterState_')) {\n            if (!storeName.includes(currentUser.username)) {\n              continue;\n            }\n          }\n        }\n        backupData[storeName] = await getAllData(storeName);\n      }\n      const dataStr = JSON.stringify(backupData, null, 2);\n      const blob = new Blob([dataStr], {\n        type: 'application/json'\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `minimarket_backup_${new Date().toISOString().slice(0, 10)}.json`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n      setMessage({\n        type: 'success',\n        text: 'Backup exportado con éxito.'\n      });\n    } catch (error) {\n      console.error('Error exporting data:', error);\n      setMessage({\n        type: 'error',\n        text: `Error al exportar backup: ${error.message}`\n      });\n    }\n  };\n  const handleImportData = async event => {\n    const file = event.target.files[0];\n    if (!file) {\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = async e => {\n      try {\n        const importedData = JSON.parse(e.target.result);\n        if (!window.confirm('¿Estás seguro de que quieres importar este backup? Esto sobrescribirá los datos actuales.')) {\n          return;\n        }\n        for (const storeName of STORES) {\n          if (importedData[storeName]) {\n            await clearStore(storeName);\n            for (const item of importedData[storeName]) {\n              await putData(storeName, item);\n            }\n          }\n        }\n        setMessage({\n          type: 'success',\n          text: 'Backup importado con éxito. Recarga la página para ver los cambios.'\n        });\n      } catch (error) {\n        console.error('Error importing data:', error);\n        setMessage({\n          type: 'error',\n          text: `Error al importar backup: ${error.message}`\n        });\n      }\n    };\n    reader.readAsText(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-6 rounded-lg shadow-md dark:bg-gray-800\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-gray-800 dark:text-white mb-6\",\n      children: \"Backup y Restauraci\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), message.text && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `p-3 mb-4 rounded-md ${message.type === 'success' ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`,\n      children: message.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-50 p-4 rounded-lg shadow-inner dark:bg-gray-700\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-gray-800 dark:text-white mb-4\",\n          children: \"Exportar Datos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-700 dark:text-gray-300 mb-4\",\n          children: \"Descarga una copia de seguridad de todos tus datos en formato JSON. Este archivo puede ser usado para restaurar tu informaci\\xF3n en el futuro.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleExportData,\n          className: \"w-full bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg transition-colors\",\n          children: \"Descargar Backup (JSON)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-50 p-4 rounded-lg shadow-inner dark:bg-gray-700\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-gray-800 dark:text-white mb-4\",\n          children: \"Importar Backup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-700 dark:text-gray-300 mb-4\",\n          children: \"Sube un archivo JSON de backup para restaurar tus datos. \\xA1Atenci\\xF3n! Esto sobrescribir\\xE1 los datos existentes.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".json\",\n          onChange: handleImportData,\n          className: \"w-full text-sm text-gray-500 dark:text-gray-300 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8 p-4 bg-yellow-50 border-l-4 border-yellow-400 text-yellow-800 rounded-lg dark:bg-yellow-800 dark:border-yellow-600 dark:text-yellow-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-bold\",\n        children: \"Nota sobre Backups Autom\\xE1ticos:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm\",\n        children: \"La funcionalidad de \\\"Backup diario autom\\xE1tico en NAS o almacenamiento externo\\\" requiere una integraci\\xF3n con un sistema de servidor o un servicio en la nube (como AWS S3, Google Cloud Storage, etc.) y no puede ser implementada directamente desde una aplicaci\\xF3n web de frontend puro. Esto implicar\\xEDa un backend que gestione la conexi\\xF3n con el NAS/almacenamiento y la programaci\\xF3n de las tareas de backup.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(BackupRestoreDashboard, \"TxRLAAYVFrKA/PLUWLpMQGgEHkc=\");\n_c = BackupRestoreDashboard;\nexport default BackupRestoreDashboard;\nvar _c;\n$RefreshReg$(_c, \"BackupRestoreDashboard\");","map":{"version":3,"names":["React","useState","getAllData","clearStore","putData","addData","STORES","getCurrentUser","jsxDEV","_jsxDEV","BackupRestoreDashboard","_s","message","setMessage","type","text","currentUser","handleExportData","backupData","storeName","role","startsWith","includes","username","dataStr","JSON","stringify","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","Date","toISOString","slice","body","appendChild","click","removeChild","revokeObjectURL","error","console","handleImportData","event","file","target","files","reader","FileReader","onload","e","importedData","parse","result","window","confirm","item","readAsText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","accept","onChange","_c","$RefreshReg$"],"sources":["C:/Users/lucas/OneDrive/Documentos/Minimarket PRO/Version 1.0/src/components/BackupRestoreDashboard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { getAllData, clearStore, putData, addData, STORES } from '../utils/indexedDb';\nimport { getCurrentUser } from '../utils/auth';\n\nconst BackupRestoreDashboard = () => {\n  const [message, setMessage] = useState({ type: '', text: '' });\n  const currentUser = getCurrentUser();\n\n  const handleExportData = async () => {\n    try {\n      const backupData = {};\n      for (const storeName of STORES) {\n        if (!currentUser || currentUser.role !== 'admin') {\n          if (storeName.startsWith('cashMovements_') || storeName.startsWith('cashRegisterState_')) {\n            if (!storeName.includes(currentUser.username)) {\n              continue;\n            }\n          }\n        }\n        backupData[storeName] = await getAllData(storeName);\n      }\n      \n      const dataStr = JSON.stringify(backupData, null, 2);\n      const blob = new Blob([dataStr], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `minimarket_backup_${new Date().toISOString().slice(0, 10)}.json`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n      setMessage({ type: 'success', text: 'Backup exportado con éxito.' });\n    } catch (error) {\n      console.error('Error exporting data:', error);\n      setMessage({ type: 'error', text: `Error al exportar backup: ${error.message}` });\n    }\n  };\n\n  const handleImportData = async (event) => {\n    const file = event.target.files[0];\n    if (!file) {\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.onload = async (e) => {\n      try {\n        const importedData = JSON.parse(e.target.result);\n        \n        if (!window.confirm('¿Estás seguro de que quieres importar este backup? Esto sobrescribirá los datos actuales.')) {\n          return;\n        }\n\n        for (const storeName of STORES) {\n          if (importedData[storeName]) {\n            await clearStore(storeName);\n            for (const item of importedData[storeName]) {\n              await putData(storeName, item); \n            }\n          }\n        }\n        setMessage({ type: 'success', text: 'Backup importado con éxito. Recarga la página para ver los cambios.' });\n      } catch (error) {\n        console.error('Error importing data:', error);\n        setMessage({ type: 'error', text: `Error al importar backup: ${error.message}` });\n      }\n    };\n    reader.readAsText(file);\n  };\n\n  return (\n    <div className=\"bg-white p-6 rounded-lg shadow-md dark:bg-gray-800\">\n      <h2 className=\"text-2xl font-bold text-gray-800 dark:text-white mb-6\">Backup y Restauración</h2>\n\n      {message.text && (\n        <div className={`p-3 mb-4 rounded-md ${message.type === 'success' ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`}>\n          {message.text}\n        </div>\n      )}\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <div className=\"bg-gray-50 p-4 rounded-lg shadow-inner dark:bg-gray-700\">\n          <h3 className=\"text-lg font-medium text-gray-800 dark:text-white mb-4\">Exportar Datos</h3>\n          <p className=\"text-gray-700 dark:text-gray-300 mb-4\">\n            Descarga una copia de seguridad de todos tus datos en formato JSON.\n            Este archivo puede ser usado para restaurar tu información en el futuro.\n          </p>\n          <button\n            onClick={handleExportData}\n            className=\"w-full bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg transition-colors\"\n          >\n            Descargar Backup (JSON)\n          </button>\n        </div>\n\n        <div className=\"bg-gray-50 p-4 rounded-lg shadow-inner dark:bg-gray-700\">\n          <h3 className=\"text-lg font-medium text-gray-800 dark:text-white mb-4\">Importar Backup</h3>\n          <p className=\"text-gray-700 dark:text-gray-300 mb-4\">\n            Sube un archivo JSON de backup para restaurar tus datos.\n            ¡Atención! Esto sobrescribirá los datos existentes.\n          </p>\n          <input\n            type=\"file\"\n            accept=\".json\"\n            onChange={handleImportData}\n            className=\"w-full text-sm text-gray-500 dark:text-gray-300 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100\"\n          />\n        </div>\n      </div>\n\n      <div className=\"mt-8 p-4 bg-yellow-50 border-l-4 border-yellow-400 text-yellow-800 rounded-lg dark:bg-yellow-800 dark:border-yellow-600 dark:text-yellow-100\">\n        <p className=\"font-bold\">Nota sobre Backups Automáticos:</p>\n        <p className=\"text-sm\">\n          La funcionalidad de \"Backup diario automático en NAS o almacenamiento externo\"\n          requiere una integración con un sistema de servidor o un servicio en la nube\n          (como AWS S3, Google Cloud Storage, etc.) y no puede ser implementada\n          directamente desde una aplicación web de frontend puro.\n          Esto implicaría un backend que gestione la conexión con el NAS/almacenamiento\n          y la programación de las tareas de backup.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default BackupRestoreDashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,EAAEC,UAAU,EAAEC,OAAO,EAAEC,OAAO,EAAEC,MAAM,QAAQ,oBAAoB;AACrF,SAASC,cAAc,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC;IAAEa,IAAI,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EAC9D,MAAMC,WAAW,GAAGT,cAAc,CAAC,CAAC;EAEpC,MAAMU,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,UAAU,GAAG,CAAC,CAAC;MACrB,KAAK,MAAMC,SAAS,IAAIb,MAAM,EAAE;QAC9B,IAAI,CAACU,WAAW,IAAIA,WAAW,CAACI,IAAI,KAAK,OAAO,EAAE;UAChD,IAAID,SAAS,CAACE,UAAU,CAAC,gBAAgB,CAAC,IAAIF,SAAS,CAACE,UAAU,CAAC,oBAAoB,CAAC,EAAE;YACxF,IAAI,CAACF,SAAS,CAACG,QAAQ,CAACN,WAAW,CAACO,QAAQ,CAAC,EAAE;cAC7C;YACF;UACF;QACF;QACAL,UAAU,CAACC,SAAS,CAAC,GAAG,MAAMjB,UAAU,CAACiB,SAAS,CAAC;MACrD;MAEA,MAAMK,OAAO,GAAGC,IAAI,CAACC,SAAS,CAACR,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;MACnD,MAAMS,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACJ,OAAO,CAAC,EAAE;QAAEV,IAAI,EAAE;MAAmB,CAAC,CAAC;MAC9D,MAAMe,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC;MACrC,MAAMK,CAAC,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACrCF,CAAC,CAACG,IAAI,GAAGN,GAAG;MACZG,CAAC,CAACI,QAAQ,GAAG,qBAAqB,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,OAAO;MAC9EN,QAAQ,CAACO,IAAI,CAACC,WAAW,CAACT,CAAC,CAAC;MAC5BA,CAAC,CAACU,KAAK,CAAC,CAAC;MACTT,QAAQ,CAACO,IAAI,CAACG,WAAW,CAACX,CAAC,CAAC;MAC5BF,GAAG,CAACc,eAAe,CAACf,GAAG,CAAC;MACxBhB,UAAU,CAAC;QAAEC,IAAI,EAAE,SAAS;QAAEC,IAAI,EAAE;MAA8B,CAAC,CAAC;IACtE,CAAC,CAAC,OAAO8B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7ChC,UAAU,CAAC;QAAEC,IAAI,EAAE,OAAO;QAAEC,IAAI,EAAE,6BAA6B8B,KAAK,CAACjC,OAAO;MAAG,CAAC,CAAC;IACnF;EACF,CAAC;EAED,MAAMmC,gBAAgB,GAAG,MAAOC,KAAK,IAAK;IACxC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAI,CAACF,IAAI,EAAE;MACT;IACF;IAEA,MAAMG,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,MAAM,GAAG,MAAOC,CAAC,IAAK;MAC3B,IAAI;QACF,MAAMC,YAAY,GAAG/B,IAAI,CAACgC,KAAK,CAACF,CAAC,CAACL,MAAM,CAACQ,MAAM,CAAC;QAEhD,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,2FAA2F,CAAC,EAAE;UAChH;QACF;QAEA,KAAK,MAAMzC,SAAS,IAAIb,MAAM,EAAE;UAC9B,IAAIkD,YAAY,CAACrC,SAAS,CAAC,EAAE;YAC3B,MAAMhB,UAAU,CAACgB,SAAS,CAAC;YAC3B,KAAK,MAAM0C,IAAI,IAAIL,YAAY,CAACrC,SAAS,CAAC,EAAE;cAC1C,MAAMf,OAAO,CAACe,SAAS,EAAE0C,IAAI,CAAC;YAChC;UACF;QACF;QACAhD,UAAU,CAAC;UAAEC,IAAI,EAAE,SAAS;UAAEC,IAAI,EAAE;QAAsE,CAAC,CAAC;MAC9G,CAAC,CAAC,OAAO8B,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7ChC,UAAU,CAAC;UAAEC,IAAI,EAAE,OAAO;UAAEC,IAAI,EAAE,6BAA6B8B,KAAK,CAACjC,OAAO;QAAG,CAAC,CAAC;MACnF;IACF,CAAC;IACDwC,MAAM,CAACU,UAAU,CAACb,IAAI,CAAC;EACzB,CAAC;EAED,oBACExC,OAAA;IAAKsD,SAAS,EAAC,oDAAoD;IAAAC,QAAA,gBACjEvD,OAAA;MAAIsD,SAAS,EAAC,uDAAuD;MAAAC,QAAA,EAAC;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAE/FxD,OAAO,CAACG,IAAI,iBACXN,OAAA;MAAKsD,SAAS,EAAE,uBAAuBnD,OAAO,CAACE,IAAI,KAAK,SAAS,GAAG,6BAA6B,GAAG,yBAAyB,EAAG;MAAAkD,QAAA,EAC7HpD,OAAO,CAACG;IAAI;MAAAkD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CACN,eAED3D,OAAA;MAAKsD,SAAS,EAAC,uCAAuC;MAAAC,QAAA,gBACpDvD,OAAA;QAAKsD,SAAS,EAAC,yDAAyD;QAAAC,QAAA,gBACtEvD,OAAA;UAAIsD,SAAS,EAAC,wDAAwD;UAAAC,QAAA,EAAC;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1F3D,OAAA;UAAGsD,SAAS,EAAC,uCAAuC;UAAAC,QAAA,EAAC;QAGrD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJ3D,OAAA;UACE4D,OAAO,EAAEpD,gBAAiB;UAC1B8C,SAAS,EAAC,wFAAwF;UAAAC,QAAA,EACnG;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAEN3D,OAAA;QAAKsD,SAAS,EAAC,yDAAyD;QAAAC,QAAA,gBACtEvD,OAAA;UAAIsD,SAAS,EAAC,wDAAwD;UAAAC,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3F3D,OAAA;UAAGsD,SAAS,EAAC,uCAAuC;UAAAC,QAAA,EAAC;QAGrD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJ3D,OAAA;UACEK,IAAI,EAAC,MAAM;UACXwD,MAAM,EAAC,OAAO;UACdC,QAAQ,EAAExB,gBAAiB;UAC3BgB,SAAS,EAAC;QAAyM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN3D,OAAA;MAAKsD,SAAS,EAAC,8IAA8I;MAAAC,QAAA,gBAC3JvD,OAAA;QAAGsD,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAC;MAA+B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC5D3D,OAAA;QAAGsD,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAC;MAOvB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzD,EAAA,CAxHID,sBAAsB;AAAA8D,EAAA,GAAtB9D,sBAAsB;AA0H5B,eAAeA,sBAAsB;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}