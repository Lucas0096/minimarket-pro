{"ast":null,"code":"import{getAllData,putData,addData,syncLocalStorageWithIndexedDB}from'./indexedDb';export const authenticateUser=async(username,password)=>{// Definir usuarios predefinidos\nconst predefinedUsers=[{id:'admin',username:'admin',password:'admin',role:'admin',marketId:null},{id:'lucas',username:'lucas',password:'lucas',role:'admin',marketId:null},{id:'market1',username:'market1',password:'market1',role:'market',marketId:'market1'},{id:'vendedor',username:'vendedor',password:'vendedor',role:'vendedor',marketId:'market1'}];// Asegurarse de que los usuarios predefinidos existan en IndexedDB\n// y que sus datos estén actualizados (especialmente el rol)\nfor(const user of predefinedUsers){const existingUser=(await getAllData('users')).find(u=>u.id===user.id);if(!existingUser){await addData('users',user);}else{// Actualizar si hay cambios en los datos predefinidos (ej. rol, password)\nawait putData('users',user);}}// Sincronizar localStorage con la versión más reciente de usuarios de IndexedDB\n// Esto es crucial para que `getCurrentUser` tenga la información correcta inmediatamente\nawait syncLocalStorageWithIndexedDB('users',await getAllData('users'));// Buscar en todos los usuarios (predefinidos y creados por admin) en IndexedDB\nconst allUsers=await getAllData('users');const user=allUsers.find(u=>u.username===username&&u.password===password);if(user){// Guardar el usuario actual en localStorage\nlocalStorage.setItem('currentUser',JSON.stringify({username:user.username,role:user.role,marketId:user.marketId}));return true;}return false;};export const getCurrentUser=()=>{const user=localStorage.getItem('currentUser');return user?JSON.parse(user):null;};export const logoutUser=()=>{localStorage.removeItem('currentUser');};// Las funciones isAdmin, isMarket, isVendedor ahora aceptan un objeto user opcional\n// Esto permite verificar el rol de un usuario específico sin depender del currentUser global\nexport const isAdmin=function(){let user=arguments.length>0&&arguments[0]!==undefined?arguments[0]:getCurrentUser();return(user===null||user===void 0?void 0:user.role)==='admin';};export const isMarket=function(){let user=arguments.length>0&&arguments[0]!==undefined?arguments[0]:getCurrentUser();return(user===null||user===void 0?void 0:user.role)==='market';};export const isVendedor=function(){let user=arguments.length>0&&arguments[0]!==undefined?arguments[0]:getCurrentUser();return(user===null||user===void 0?void 0:user.role)==='vendedor';};export const getCurrentMarket=()=>{const user=getCurrentUser();return user===null||user===void 0?void 0:user.marketId;};// DONE","map":{"version":3,"names":["getAllData","putData","addData","syncLocalStorageWithIndexedDB","authenticateUser","username","password","predefinedUsers","id","role","marketId","user","existingUser","find","u","allUsers","localStorage","setItem","JSON","stringify","getCurrentUser","getItem","parse","logoutUser","removeItem","isAdmin","arguments","length","undefined","isMarket","isVendedor","getCurrentMarket"],"sources":["C:/Users/lucas/Downloads/Minimarket PRO/src/utils/auth.js"],"sourcesContent":["import { getAllData, putData, addData, syncLocalStorageWithIndexedDB } from './indexedDb';\r\n\r\nexport const authenticateUser = async (username, password) => {\r\n  // Definir usuarios predefinidos\r\n  const predefinedUsers = [\r\n    { id: 'admin', username: 'admin', password: 'admin', role: 'admin', marketId: null },\r\n    { id: 'lucas', username: 'lucas', password: 'lucas', role: 'admin', marketId: null },\r\n    { id: 'market1', username: 'market1', password: 'market1', role: 'market', marketId: 'market1' },\r\n    { id: 'vendedor', username: 'vendedor', password: 'vendedor', role: 'vendedor', marketId: 'market1' }\r\n  ];\r\n\r\n  // Asegurarse de que los usuarios predefinidos existan en IndexedDB\r\n  // y que sus datos estén actualizados (especialmente el rol)\r\n  for (const user of predefinedUsers) {\r\n    const existingUser = (await getAllData('users')).find(u => u.id === user.id);\r\n    if (!existingUser) {\r\n      await addData('users', user);\r\n    } else {\r\n      // Actualizar si hay cambios en los datos predefinidos (ej. rol, password)\r\n      await putData('users', user);\r\n    }\r\n  }\r\n  // Sincronizar localStorage con la versión más reciente de usuarios de IndexedDB\r\n  // Esto es crucial para que `getCurrentUser` tenga la información correcta inmediatamente\r\n  await syncLocalStorageWithIndexedDB('users', await getAllData('users'));\r\n\r\n  // Buscar en todos los usuarios (predefinidos y creados por admin) en IndexedDB\r\n  const allUsers = await getAllData('users');\r\n  const user = allUsers.find(u => u.username === username && u.password === password);\r\n  \r\n  if (user) {\r\n    // Guardar el usuario actual en localStorage\r\n    localStorage.setItem('currentUser', JSON.stringify({\r\n      username: user.username,\r\n      role: user.role,\r\n      marketId: user.marketId\r\n    }));\r\n    return true;\r\n  }\r\n  \r\n  return false;\r\n};\r\n\r\nexport const getCurrentUser = () => {\r\n  const user = localStorage.getItem('currentUser');\r\n  return user ? JSON.parse(user) : null;\r\n};\r\n\r\nexport const logoutUser = () => {\r\n  localStorage.removeItem('currentUser');\r\n};\r\n\r\n// Las funciones isAdmin, isMarket, isVendedor ahora aceptan un objeto user opcional\r\n// Esto permite verificar el rol de un usuario específico sin depender del currentUser global\r\nexport const isAdmin = (user = getCurrentUser()) => {\r\n  return user?.role === 'admin';\r\n};\r\n\r\nexport const isMarket = (user = getCurrentUser()) => {\r\n  return user?.role === 'market';\r\n};\r\n\r\nexport const isVendedor = (user = getCurrentUser()) => {\r\n  return user?.role === 'vendedor';\r\n};\r\n\r\nexport const getCurrentMarket = () => {\r\n  const user = getCurrentUser();\r\n  return user?.marketId;\r\n};\r\n\r\n// DONE"],"mappings":"AAAA,OAASA,UAAU,CAAEC,OAAO,CAAEC,OAAO,CAAEC,6BAA6B,KAAQ,aAAa,CAEzF,MAAO,MAAM,CAAAC,gBAAgB,CAAG,KAAAA,CAAOC,QAAQ,CAAEC,QAAQ,GAAK,CAC5D;AACA,KAAM,CAAAC,eAAe,CAAG,CACtB,CAAEC,EAAE,CAAE,OAAO,CAAEH,QAAQ,CAAE,OAAO,CAAEC,QAAQ,CAAE,OAAO,CAAEG,IAAI,CAAE,OAAO,CAAEC,QAAQ,CAAE,IAAK,CAAC,CACpF,CAAEF,EAAE,CAAE,OAAO,CAAEH,QAAQ,CAAE,OAAO,CAAEC,QAAQ,CAAE,OAAO,CAAEG,IAAI,CAAE,OAAO,CAAEC,QAAQ,CAAE,IAAK,CAAC,CACpF,CAAEF,EAAE,CAAE,SAAS,CAAEH,QAAQ,CAAE,SAAS,CAAEC,QAAQ,CAAE,SAAS,CAAEG,IAAI,CAAE,QAAQ,CAAEC,QAAQ,CAAE,SAAU,CAAC,CAChG,CAAEF,EAAE,CAAE,UAAU,CAAEH,QAAQ,CAAE,UAAU,CAAEC,QAAQ,CAAE,UAAU,CAAEG,IAAI,CAAE,UAAU,CAAEC,QAAQ,CAAE,SAAU,CAAC,CACtG,CAED;AACA;AACA,IAAK,KAAM,CAAAC,IAAI,GAAI,CAAAJ,eAAe,CAAE,CAClC,KAAM,CAAAK,YAAY,CAAG,CAAC,KAAM,CAAAZ,UAAU,CAAC,OAAO,CAAC,EAAEa,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACN,EAAE,GAAKG,IAAI,CAACH,EAAE,CAAC,CAC5E,GAAI,CAACI,YAAY,CAAE,CACjB,KAAM,CAAAV,OAAO,CAAC,OAAO,CAAES,IAAI,CAAC,CAC9B,CAAC,IAAM,CACL;AACA,KAAM,CAAAV,OAAO,CAAC,OAAO,CAAEU,IAAI,CAAC,CAC9B,CACF,CACA;AACA;AACA,KAAM,CAAAR,6BAA6B,CAAC,OAAO,CAAE,KAAM,CAAAH,UAAU,CAAC,OAAO,CAAC,CAAC,CAEvE;AACA,KAAM,CAAAe,QAAQ,CAAG,KAAM,CAAAf,UAAU,CAAC,OAAO,CAAC,CAC1C,KAAM,CAAAW,IAAI,CAAGI,QAAQ,CAACF,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACT,QAAQ,GAAKA,QAAQ,EAAIS,CAAC,CAACR,QAAQ,GAAKA,QAAQ,CAAC,CAEnF,GAAIK,IAAI,CAAE,CACR;AACAK,YAAY,CAACC,OAAO,CAAC,aAAa,CAAEC,IAAI,CAACC,SAAS,CAAC,CACjDd,QAAQ,CAAEM,IAAI,CAACN,QAAQ,CACvBI,IAAI,CAAEE,IAAI,CAACF,IAAI,CACfC,QAAQ,CAAEC,IAAI,CAACD,QACjB,CAAC,CAAC,CAAC,CACH,MAAO,KAAI,CACb,CAEA,MAAO,MAAK,CACd,CAAC,CAED,MAAO,MAAM,CAAAU,cAAc,CAAGA,CAAA,GAAM,CAClC,KAAM,CAAAT,IAAI,CAAGK,YAAY,CAACK,OAAO,CAAC,aAAa,CAAC,CAChD,MAAO,CAAAV,IAAI,CAAGO,IAAI,CAACI,KAAK,CAACX,IAAI,CAAC,CAAG,IAAI,CACvC,CAAC,CAED,MAAO,MAAM,CAAAY,UAAU,CAAGA,CAAA,GAAM,CAC9BP,YAAY,CAACQ,UAAU,CAAC,aAAa,CAAC,CACxC,CAAC,CAED;AACA;AACA,MAAO,MAAM,CAAAC,OAAO,CAAG,QAAAA,CAAA,CAA6B,IAA5B,CAAAd,IAAI,CAAAe,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGN,cAAc,CAAC,CAAC,CAC7C,MAAO,CAAAT,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEF,IAAI,IAAK,OAAO,CAC/B,CAAC,CAED,MAAO,MAAM,CAAAoB,QAAQ,CAAG,QAAAA,CAAA,CAA6B,IAA5B,CAAAlB,IAAI,CAAAe,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGN,cAAc,CAAC,CAAC,CAC9C,MAAO,CAAAT,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEF,IAAI,IAAK,QAAQ,CAChC,CAAC,CAED,MAAO,MAAM,CAAAqB,UAAU,CAAG,QAAAA,CAAA,CAA6B,IAA5B,CAAAnB,IAAI,CAAAe,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGN,cAAc,CAAC,CAAC,CAChD,MAAO,CAAAT,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEF,IAAI,IAAK,UAAU,CAClC,CAAC,CAED,MAAO,MAAM,CAAAsB,gBAAgB,CAAGA,CAAA,GAAM,CACpC,KAAM,CAAApB,IAAI,CAAGS,cAAc,CAAC,CAAC,CAC7B,MAAO,CAAAT,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAED,QAAQ,CACvB,CAAC,CAED","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}