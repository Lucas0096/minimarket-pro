{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\OneDrive\\\\Documentos\\\\Minimarket PRO\\\\Version 1.0\\\\src\\\\components\\\\SalesDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport SaleForm from './SaleForm';\nimport SalesHistory from './SalesHistory';\nimport { isAdmin, getCurrentMarket, isMarket, isVendedor } from '../utils/auth';\nimport { getAllData, putData, syncLocalStorageWithIndexedDB } from '../utils/indexedDb';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SalesDashboard = ({\n  isOnline,\n  selectedMarket\n}) => {\n  _s();\n  const [sales, setSales] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  useEffect(() => {\n    const loadData = async () => {\n      const allSales = await getAllData('sales');\n      const allProducts = await getAllData('products');\n      const marketToShow = isAdmin() ? selectedMarket : getCurrentMarket();\n      const filteredSales = isAdmin() && selectedMarket ? allSales.filter(s => s.marketId === selectedMarket) : allSales.filter(s => s.marketId === marketToShow);\n      const filteredProducts = isAdmin() && selectedMarket ? allProducts.filter(p => p.marketId === selectedMarket) : allProducts.filter(p => p.marketId === marketToShow);\n      setSales(filteredSales);\n      setProducts(filteredProducts);\n    };\n    loadData();\n  }, [selectedMarket]);\n  const saveSales = async updatedSales => {\n    setSales(updatedSales);\n    syncLocalStorageWithIndexedDB('sales', updatedSales);\n  };\n  const handleAddSale = async sale => {\n    const newSales = [...sales, sale];\n    await putData('sales', sale);\n    saveSales(newSales);\n    const allExistingProducts = await getAllData('products');\n    const updatedProducts = allExistingProducts.map(product => {\n      const soldItem = sale.items.find(item => item.productId === product.id);\n      if (soldItem) {\n        let remainingQuantity = soldItem.quantity;\n        const sortedLots = [...product.lots].sort((a, b) => new Date(a.expiryDate) - new Date(b.expiryDate));\n        const updatedLots = [];\n        for (let i = 0; i < sortedLots.length && remainingQuantity > 0; i++) {\n          const currentLot = {\n            ...sortedLots[i]\n          };\n          if (currentLot.quantity >= remainingQuantity) {\n            currentLot.quantity -= remainingQuantity;\n            remainingQuantity = 0;\n          } else {\n            remainingQuantity -= currentLot.quantity;\n            currentLot.quantity = 0;\n          }\n          updatedLots.push(currentLot);\n        }\n        const finalLots = updatedLots.filter(lot => lot.quantity > 0);\n        const newTotalStock = finalLots.reduce((sum, lot) => sum + lot.quantity, 0);\n        return {\n          ...product,\n          stock: newTotalStock,\n          lots: finalLots\n        };\n      }\n      return product;\n    });\n    for (const product of updatedProducts) {\n      await putData('products', product);\n    }\n    syncLocalStorageWithIndexedDB('products', updatedProducts);\n    setProducts(updatedProducts.filter(p => p.marketId === (isAdmin() ? selectedMarket : getCurrentMarket())));\n    setShowForm(false);\n  };\n  if (!isAdmin() && !isMarket() && !isVendedor()) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-10 text-gray-800 dark:text-white\",\n      children: \"Acceso no autorizado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-6 rounded-lg shadow-md dark:bg-gray-800\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-gray-800 dark:text-white mb-6\",\n      children: \"Gesti\\xF3n de Ventas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), (isAdmin() || isMarket() || isVendedor()) && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowForm(true),\n      className: \"bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg transition-colors\",\n      children: \"Nueva Venta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), showForm && /*#__PURE__*/_jsxDEV(SaleForm, {\n      products: products,\n      onAddSale: handleAddSale,\n      onCancel: () => setShowForm(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SalesHistory, {\n      sales: sales,\n      products: products\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(SalesDashboard, \"MH1T2lC+PmDjoYW3TEDctbAdxK4=\");\n_c = SalesDashboard;\nexport default SalesDashboard;\nvar _c;\n$RefreshReg$(_c, \"SalesDashboard\");","map":{"version":3,"names":["React","useState","useEffect","SaleForm","SalesHistory","isAdmin","getCurrentMarket","isMarket","isVendedor","getAllData","putData","syncLocalStorageWithIndexedDB","jsxDEV","_jsxDEV","SalesDashboard","isOnline","selectedMarket","_s","sales","setSales","products","setProducts","showForm","setShowForm","loadData","allSales","allProducts","marketToShow","filteredSales","filter","s","marketId","filteredProducts","p","saveSales","updatedSales","handleAddSale","sale","newSales","allExistingProducts","updatedProducts","map","product","soldItem","items","find","item","productId","id","remainingQuantity","quantity","sortedLots","lots","sort","a","b","Date","expiryDate","updatedLots","i","length","currentLot","push","finalLots","lot","newTotalStock","reduce","sum","stock","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onAddSale","onCancel","_c","$RefreshReg$"],"sources":["C:/Users/lucas/OneDrive/Documentos/Minimarket PRO/Version 1.0/src/components/SalesDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport SaleForm from './SaleForm';\nimport SalesHistory from './SalesHistory';\nimport { isAdmin, getCurrentMarket, isMarket, isVendedor } from '../utils/auth';\nimport { getAllData, putData, syncLocalStorageWithIndexedDB } from '../utils/indexedDb';\n\nconst SalesDashboard = ({ isOnline, selectedMarket }) => {\n  const [sales, setSales] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n\n  useEffect(() => {\n    const loadData = async () => {\n      const allSales = await getAllData('sales');\n      const allProducts = await getAllData('products');\n      \n      const marketToShow = isAdmin() ? selectedMarket : getCurrentMarket();\n      const filteredSales = isAdmin() && selectedMarket ? \n        allSales.filter(s => s.marketId === selectedMarket) : \n        allSales.filter(s => s.marketId === marketToShow);\n      \n      const filteredProducts = isAdmin() && selectedMarket ? \n        allProducts.filter(p => p.marketId === selectedMarket) : \n        allProducts.filter(p => p.marketId === marketToShow);\n\n      setSales(filteredSales);\n      setProducts(filteredProducts);\n    };\n    loadData();\n  }, [selectedMarket]);\n\n  const saveSales = async (updatedSales) => {\n    setSales(updatedSales);\n    syncLocalStorageWithIndexedDB('sales', updatedSales);\n  };\n\n  const handleAddSale = async (sale) => {\n    const newSales = [...sales, sale];\n    await putData('sales', sale);\n    saveSales(newSales);\n    \n    const allExistingProducts = await getAllData('products');\n    const updatedProducts = allExistingProducts.map(product => {\n      const soldItem = sale.items.find(item => item.productId === product.id);\n      if (soldItem) {\n        let remainingQuantity = soldItem.quantity;\n        const sortedLots = [...product.lots].sort((a, b) => new Date(a.expiryDate) - new Date(b.expiryDate));\n        const updatedLots = [];\n\n        for (let i = 0; i < sortedLots.length && remainingQuantity > 0; i++) {\n          const currentLot = { ...sortedLots[i] };\n          if (currentLot.quantity >= remainingQuantity) {\n            currentLot.quantity -= remainingQuantity;\n            remainingQuantity = 0;\n          } else {\n            remainingQuantity -= currentLot.quantity;\n            currentLot.quantity = 0;\n          }\n          updatedLots.push(currentLot);\n        }\n        \n        const finalLots = updatedLots.filter(lot => lot.quantity > 0);\n        const newTotalStock = finalLots.reduce((sum, lot) => sum + lot.quantity, 0);\n\n        return {\n          ...product,\n          stock: newTotalStock,\n          lots: finalLots\n        };\n      }\n      return product;\n    });\n    \n    for (const product of updatedProducts) {\n      await putData('products', product);\n    }\n    syncLocalStorageWithIndexedDB('products', updatedProducts);\n    \n    setProducts(updatedProducts.filter(p => p.marketId === (isAdmin() ? selectedMarket : getCurrentMarket())));\n    \n    setShowForm(false);\n  };\n\n  if (!isAdmin() && !isMarket() && !isVendedor()) {\n    return <div className=\"text-center py-10 text-gray-800 dark:text-white\">Acceso no autorizado</div>;\n  }\n\n  return (\n    <div className=\"bg-white p-6 rounded-lg shadow-md dark:bg-gray-800\">\n      <h2 className=\"text-2xl font-bold text-gray-800 dark:text-white mb-6\">Gesti√≥n de Ventas</h2>\n      {(isAdmin() || isMarket() || isVendedor()) && (\n        <button\n          onClick={() => setShowForm(true)}\n          className=\"bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg transition-colors\"\n        >\n          Nueva Venta\n        </button>\n      )}\n\n      {showForm && (\n        <SaleForm\n          products={products}\n          onAddSale={handleAddSale}\n          onCancel={() => setShowForm(false)}\n        />\n      )}\n\n      <SalesHistory sales={sales} products={products} />\n    </div>\n  );\n};\n\nexport default SalesDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}